#! /usr/bin/env stap

probe begin
{
    printf("begin trace for unconsumed/consumed memory soft offline\n")
}

probe kernel.function("migrate_pages").call
{
    printf("pid:  %d\n", pid())
    print_backtrace()
}

probe kernel.function("try_memory_failure_hugetlb").call
{
    printf("pid:  %d\n", pid())
    print_backtrace()
}

// trace failure case
probe kernel.function("get_any_page").return
{
    if ($return != 1)
    {
        printf("function %s return %d\n", ppfunc(), $return)
        // printf("pid:  %d, return: %d\n", pid(), )
        //printf("flags: %d\n", flags)
        // printf($$vars)
        print_backtrace()
    }
}

probe kernel.function("HWPoisonHandlable").return
{
    if ($return != true)
    {
        printf("function %s return %d\n", ppfunc(), $return)
        // printf("pid:  %d, return: %d\n", pid(), )
        //printf("flags: %d\n", flags)
        // printf($$vars)
        print_backtrace()
    }
}

//-----------------------------------------------------------------------------
// example
//-----------------------------------------------------------------------------
//probe kernel.function("get_any_page") {
//    printf("get_any_page called with arg1 = %d, arg2 = %s\n", $arg1, user_string($arg2))
//}

//probe vfs.read, vfs.write {
//    printf("%s %s\n", execname(), filename)
//}